\documentclass[11pt]{article}
\title{Lab 2 - Linguistic Data\\
  Stat 215A, Fall 2015}
\author{Diego Ponce De Leon Barido, Katerina Georgiou, Kellie Ottoboni, Steve Howard}

\usepackage{amsmath,amssymb,amsthm}
\usepackage{graphicx,float}
\usepackage[margin=0.75in]{geometry}
\usepackage{bm}
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0cm}
\usepackage{subcaption}

\begin{document}

<<setup, echo=FALSE, results ='hide', message=F, warning=F>>=
############ Script to Analyze data from A1
library(data.table)
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
library(xtable)
library(grid)

#Function libraries
source('/Users/Diego/Desktop/Projects_Code/flexbox-data-dump-analysis/complete_data_analysis/date_functions.R')
source('/Users/Diego/Desktop/Projects_Code/flexbox-data-dump-analysis/complete_data_analysis/cleaning_functions.R')
source('/Users/Diego/Desktop/Projects_Code/flexbox-data-dump-analysis/complete_data_analysis/merging_binding.R')
source('/Users/Diego/Desktop/Projects_Code/flexbox-data-dump-analysis/complete_data_analysis/read_data.R')
source('/Users/Diego/Desktop/Projects_Code/flexbox-data-dump-analysis/complete_data_analysis/time_series_plots.R')

CACHE.FIGURES <- TRUE
@


<<reding.data,echo=FALSE, results ='hide'>>=
############  Reading data
#Reading data - specify the number of the dump and the flexbox ID
data_list <- read.data('DUMP1','A2') 

inside <- data_list[[1]]
ambient <- data_list[[2]]
refrigerator <- data_list[[3]]
switch <- data_list[[4]]
house <- data_list[[5]]
@

<<converting.dates,echo=FALSE,results="asis",fig.align="left">>=
############  Converting dates and using the date function

#Converts dates
dates_data_frame <- date.data.frame(ambient,inside,refrigerator,switch,house) 

#Extract the data frames from the list
ambient <- dates_data_frame[[1]]
inside <- dates_data_frame[[2]]
switch <- dates_data_frame[[3]]
house <- dates_data_frame[[4]]
refrigerator <- dates_data_frame[[5]]

############  Printing warnings on the number of days we have logged so far
#print(date.check(refrigerator,inside,house,ambient))

table.table <- xtable(date.check(refrigerator,inside,house,ambient))
print(table.table)
@



<<small.data.adjustments,echo=FALSE>>=
############ Small changes to data

  # Dividing my 1000 to have reasonable values
  inside$temp1 <- inside$fridge_temp1/1000
  inside$temp2 <- inside$fridge_temp2/1000

  # Calculating power for the fridge
  refrigerator$power <- refrigerator$vrms3*refrigerator$i_rms3

  # Opening and closing for the SWITCH
  switch$value <- ifelse(switch$open=='True',1,0)
@

<<timeseriesplotsetup,fig.align="left",fig.width = 5, fig.height = 5,results ='hide',echo=FALSE, warning=F,message=F>>=
###### Time series plots of the last seven days

time.series.data <- time.series.sevendays(ambient,inside,refrigerator,switch,house)

ambient.plot <- ggplot(time.series.data[[1]],aes(x=time_stamp, y=ambient_temp)) + geom_point(size=1) + ggtitle(expression(paste("Ambient Temperature",degree,"C"))) + xlab('Date') + ylab(expression(paste(degree,"C"))) + theme(plot.title=element_text(size=8),axis.title=element_text(size=8),plot.margin= unit(c(0,1,0,1),units='cm'))
inside.temp.plot <- ggplot() + geom_point(data=time.series.data[[2]],aes(x=time_stamp, y=temp1),color='black',size=1) + geom_point(data=time.series.data[[2]],aes(x=time_stamp, y=temp2),color='red',size=1) +  ggtitle(expression(paste("Inside Temperature",degree,"C")))  + xlab('Date') + ylab(expression(paste(degree,"C"))) + theme(plot.title=element_text(size=8),axis.title=element_text(size=8),plot.margin= unit(c(0,1,0,1),units='cm'))   
refrigerator.plot <- ggplot() + geom_line(data=time.series.data[[3]],aes(x=time_stamp, y=power),color='black',size=1) + ggtitle(expression(paste("Refrigerator (W)",degree,"C"))) + xlab('Date') + ylab(expression(paste("W"))) + theme(plot.title=element_text(size=8),axis.title=element_text(size=8),plot.margin= unit(c(0,1,0,1),units='cm'))
switch.plot <- ggplot() + geom_point(data=time.series.data[[4]],aes(x=time_stamp, y=open),color='black',size=1) + ggtitle(expression(paste("Door Openings"))) +  ylab(expression(paste("N.Openings"))) + xlab('Date') + theme(plot.title=element_text(size=8),axis.title=element_text(size=8),plot.margin= unit(c(0,1,0,1),units='cm'))
house.plot <- ggplot() + geom_line(data=time.series.data[[5]],aes(x=time_stamp, y=house_Power),color='black',size=1) + ggtitle(expression(paste("House (W)",degree,"C"))) + xlab('Date') + ylab("W") + theme(plot.title=element_text(size=8),axis.title=element_text(size=8),plot.margin= unit(c(0,1,0,1),units='cm'))

grid.arrange(ambient.plot,inside.temp.plot,refrigerator.plot,switch.plot,house.plot,ncol=1,nrow=5)
@


<<correlationplots,fig.align="left",results ='hide',echo=FALSE, warning=F,message=F>>=
  ###### Merging and binding data before plotting
  # Note: Returns data frames ready to be plotted. All values are combined with ambient temperature. For example, ambient temperature and power
  # ambient temperature and fridge energy, household energy, etc. 
  
  merged_data_list <- merge.bind(ambient,refrigerator,inside,house,switch) 
  
  ##### Correlation Plots 
  
  plot1 <- ggplot(merged_data_list[[1]],aes(x=average_hr_ambient, y=average_hr_inside,colour=hour)) + geom_point(size=2) + scale_colour_gradientn(colours=rainbow(3)) + labs(title="Average Inside Fridge Temperature") + ylab(expression(paste("Inside Temperature",degree,"C"))) + xlab(expression(paste("Ambient Temperature",degree,"C"))) + stat_smooth(method = "lm", se=TRUE, color="blue", aes(group=1))
  plot2 <- ggplot(merged_data_list[[2]],aes(x=average_hr_ambient, y=average_hr_power,colour=hour)) + geom_point(size=2) + scale_colour_gradientn(colours=rainbow(3)) + labs(title="Fridge Energy Consumption") + ylab(expression(paste("Energy (Wh)"))) + xlab(expression(paste("Ambient Temperature",degree,"C"))) + stat_smooth(method = "lm", se=TRUE, color="blue", aes(group=1))
  plot3 <- ggplot(merged_data_list[[3]],aes(x=average_hr_ambient, y=average_hr_hpower,colour=hour)) + geom_point(size=2) + scale_colour_gradientn(colours=rainbow(3)) + labs(title="Household Energy Consumption") + ylab(expression(paste("Energy (Wh)"))) + xlab(expression(paste("Ambient Temperature",degree,"C"))) + stat_smooth(method = "lm", se=TRUE, color="blue", aes(group=1))
  plot4 <- ggplot(merged_data_list[[4]],aes(x=average_hr_ambient, y=sum_opennings,colour=hour)) + geom_point(size=2) + scale_colour_gradientn(colours=rainbow(3)) + labs(title="Door Openings ") + ylab(expression(paste("No. Door Openings"))) + xlab(expression(paste("Ambient Temperature",degree,"C")))
  
grid.arrange(plot1,plot2,plot3,plot4,ncol=2,nrow=2)  
@
    
      










\end{document}

